{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-debounce-hook/","result":{"data":{"site":{"siteMetadata":{"title":"Tripping on Code","author":"Avinash"}},"markdownRemark":{"id":"aeae2e9b-f48a-53b2-a606-2cbc711272a7","excerpt":"What is debouncing? The easiest way to explain debouncing is to imagine a text field field that triggers a search (for say movies) as you type. We don’t want to…","html":"<h2>What is debouncing?</h2>\n<p>The easiest way to explain debouncing is to imagine a text field field that triggers a search (for say movies) as you type. We don’t want to perform a search for every keystroke the user types in. What we want to do is to wait for the user to finish typing and then perform a search. Debouncing allows us to do that. Debouncing waits for the user to pause for a defined period of time before firing the event.</p>\n<p>Debouncing and Throttling are explained visually and in much more detail <a href=\"https://codeburst.io/throttling-and-debouncing-in-javascript-b01cad5c8edf\" target=\"_blank\" rel=\"nofollow\">here</a>.</p>\n<h2>Usage with React functional components</h2>\n<p>Any code inside a react functional function gets executed every time it re-renders. This makes it hard to implement a debounce function because it gets re-initialized every time this occurs. With react hooks, it is now possible (and very easy) to add debounce functions inside a functional component.</p>\n<h2>The useDebounce hook</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useCallback <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> debounce <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash-es\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useDebounce</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fnToDebounce<span class=\"token punctuation\">,</span> durationInMs <span class=\"token operator\">=</span> <span class=\"token number\">200</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>durationInMs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"durationInMs for debounce should be a number\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fnToDebounce <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fnToDebounce cannot be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> fnToDebounce <span class=\"token operator\">!==</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fnToDebounce should be a function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>fnToDebounce<span class=\"token punctuation\">,</span> durationInMs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fnToDebounce<span class=\"token punctuation\">,</span> durationInMs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> useDebounce<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Looking at the code, 9/10 lines validate the inputs passed into the hook, only 1 line of code is actually needed to get the\ndebounce working.</p>\n<h3>How to use useDebounce?</h3>\n<p>Using this in a react component is very straightforward. Let’s look at the code sample below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useDebounce <span class=\"token keyword\">from</span> <span class=\"token string\">\"./useDebounce\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyComponent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>displayText<span class=\"token punctuation\">,</span> setDisplayText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> debouncedFunction <span class=\"token operator\">=</span> <span class=\"token function\">useDebounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do anything here. For this example, i'm just setting the state</span>\n    <span class=\"token function\">setDisplayText</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>useDebounce example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">ev</span> <span class=\"token operator\">=></span> <span class=\"token function\">debouncedFunction</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>pre<span class=\"token operator\">></span>Current Value<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>displayText<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>How this works</h2>\n<p>The magic behind useDebounce lies in the <a href=\"https://reactjs.org/docs/hooks-reference.html#usecallback\" target=\"_blank\" rel=\"nofollow\">useCallback</a>{:target=”_blank”} hook. The useCallback hook is a core hook of React. This hook return a memoized function that does not change unless one of it’s dependencies ( passed into it as the second argument) change.</p>\n<p>From our perspective, that means that the function returned from useCallback will <em>not</em> be re-declared unless either the <em>fnToDebounce</em> changes or the <em>durationInMs</em> changes.</p>\n<p>By using the useCallback hook, we have created a function that is declared once and that is not recreated whenever a re-render of the component occurs.</p>\n<h2>Extending this further</h2>\n<p>A common use case for the useDebounce hook is to delay the update to state. The example above does achieve this, but react hooks allows us to build a more graceful solution.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useDebounce <span class=\"token keyword\">from</span> <span class=\"token string\">\"./useDebounce\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useDebouncedState</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">initialState<span class=\"token punctuation\">,</span> durationInMs <span class=\"token operator\">=</span> <span class=\"token number\">200</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>internalState<span class=\"token punctuation\">,</span> setInternalState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> debouncedFunction <span class=\"token operator\">=</span> <span class=\"token function\">useDebounce</span><span class=\"token punctuation\">(</span>setInternalState<span class=\"token punctuation\">,</span> durationInMs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>internalState<span class=\"token punctuation\">,</span> debouncedFunction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> useDebouncedState<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The useDebouncedState function wraps the useState hook and the useDebounce hook together. This hook has similar interface to the useState hook. It accepts an initial state and an optional second argument that indicates the debounce interval.</p>\n<h3>Using useDebouncedState</h3>\n<p>Using this new hook is as simple as changing useState declarations with useDebouncedState. Everything else works as is.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useDebouncedState <span class=\"token keyword\">from</span> <span class=\"token string\">\"./useDebouncedState\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>displayText<span class=\"token punctuation\">,</span> setDisplayText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useDebouncedState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>useDebounce example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">ev</span> <span class=\"token operator\">=></span> <span class=\"token function\">setDisplayText</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>pre<span class=\"token operator\">></span>Current Value<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>displayText<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>See this in action</h3>\n<p><a href=\"https://codesandbox.io/s/usedebouncedstate-3h3si?fontsize=14\" target=\"_blank\" rel=\"nofollow\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit useDebouncedState\"></a></p>","frontmatter":{"title":"Debouncing with React hooks and lodash","date":"December 28, 2020","description":""}}},"pageContext":{"slug":"/react-debounce-hook/","previous":null,"next":{"fields":{"slug":"/yield-return-random/"},"frontmatter":{"title":"Consequences of Multiple Enumeration of an IEnumerable"}}}},"staticQueryHashes":["426816048","63159454"]}